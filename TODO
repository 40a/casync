BEFORE FIRST BLOG STORY:
* end the GOODBYE table in a marker, so that we can search backwards for it, as well as an overall size, so that we know we are looking at the whole thing and not just something appended
* ensure that reflinks work fine if we sync raw files
* drop the overall digest from the index file, so that we can generate it based on cached data

TO MAKE IT USEFUL FOR BACKUPS:
* encryption: aes256 of rotating hash function + HMAC for identifying chunks + individually encrypted chunks
* speed up repeated image generation: maintain persistent cache for directory trees that permits lookups by a path location as key, returning a chunk id and "newest covering mtime"

LATER:
* verify
* diff
* save/restore btrfs file/subvol flags
* save/restore hardlinks?
* check fs features when restoring
* exclude patterns
* build seed while extracting
* optionally make seeds persistent
* acquire gpg signature along with caidx/caibx/catar
* coalesce index frames sent over protocol
* rework uploading via ssh to use seed instead of cache store for providing chunks to server
* casync-http: parallel http GETs
* casync-http: try all configured stores one after the other before sending MISSING
* add support for compressed index files and archive files
* define mime types for our files
* define http-based url protocol prefix for caibx+caidx
* support accessing base trees through native protocol
* implicitly generate index + chunks when accessing base trees or archives through native protocol
* rework caindex to read multiple chunks per read (use reallocbuffer like elsewhere)
* permit 511 (or 4095?) redundant NUL bytes at the end of archive and index files, so that they could in theory stored on block devices
* seed: cache GOODBYE name table data so that we can regenerate the right bits when needed
* when extracting, optionally make use of reduced feature bits than the archive contains
* optionally import from/export to classic tar ball (and zip?)
* optionally interpret aufs/union mount whiteout files?
* mkdev: generate named device node symlinks cleanly via udev rule
* fuse: expose acls and fcaps
* fuse: possibly translate user names on access
* fuse: provide "mount.casync" compat symlink so that people can list casync mounts in /etc/fstab
* encoder: change seeking to be more like decoder's seeking (i.e. delay returned events until the next ca_encoder_step() call)
* rename offset accessor functions (drop the "archive")
* when extracting, check that index feature flags and archive feature flags match
* send progress information via sd_notify(), so that people can wrap casync nicely in UIs
* maybe turn "recursive" mode into a numeric value specifying how far to descend?
* make "casync stat" work on a directory with a subpath
