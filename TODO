SHORT-TERM:
* use btrfs reflink with contents checking
* rework how default --with= and --without= are calculated, so that --except stuff doesn't leak into blob index

TO MAKE IT USEFUL FOR BACKUPS:
* encryption: aes256 of rotating hash function + HMAC for identifying chunks + individually encrypted chunks
* speed up repeated image generation: maintain persistent cache for directory trees that permits lookups by a path location as key, returning a chunk id and "newest covering mtime"

LATER:
* verify
* diff
* save/restore hardlinks?
* check fs features when restoring
* exclude patterns
* build seed while extracting
* optionally make seeds persistent
* acquire gpg signature along with caidx/caibx/catar
* coalesce index frames sent over protocol
* rework uploading via ssh to use seed instead of cache store for providing chunks to server
* casync-http: parallel http GETs
* casync-http: try all configured stores one after the other before sending MISSING
* add support for compressed index files and archive files
* define mime types for our files
* define http-based url protocol prefix for caibx+caidx
* support accessing base trees through native protocol
* implicitly generate index + chunks when accessing base trees or archives through native protocol
* rework caindex to read multiple chunks per read (use reallocbuffer like elsewhere)
* permit 511 (or 4095?) redundant NUL bytes at the end of archive and index files, so that they could in theory stored on block devices
* seed: cache GOODBYE name table data so that we can regenerate the right bits when needed
* optionally import from/export to classic tar ball (and zip?)
* optionally interpret aufs/union mount whiteout files?
* fuse: expose acls and fcaps, selinux
* fuse: possibly translate user names on access
* fuse: provide "mount.casync" compat symlink so that people can list casync mounts in /etc/fstab
* encoder: change seeking to be more like decoder's seeking (i.e. delay returned events until the next ca_encoder_step() call)
* rename offset accessor functions (drop the "archive")
* send progress information via sd_notify(), so that people can wrap casync nicely in UIs
* maybe turn "recursive" mode into a numeric value specifying how far to descend?
* make "casync stat" work on a directory with a subpath
* save/restore xfs/ext4 projid
* tweak chunker: shift cut to last "marker".
